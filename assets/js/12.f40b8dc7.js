(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{189:function(t,a,n){"use strict";n.r(a);var e=n(0),s=Object(e.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),n("h2",{attrs:{id:"定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),n("ol",[n("li",[t._v("与类相似，也有数据成员和函数成员")]),t._v(" "),n("li",[t._v("区别\n"),n("ul",[n("li",[t._v("类是引用类型,结构是"),n("strong",[t._v("值类型")])]),t._v(" "),n("li",[t._v("结构隐式密封的，"),n("strong",[t._v("不能被派生")])]),t._v(" "),n("li",[t._v("结构可以有实例构造函数和静态构造函数，但是"),n("strong",[t._v("没有析构函数")])])])])]),t._v(" "),n("h2",{attrs:{id:"值类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#值类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 值类型")]),t._v(" "),n("ul",[n("li",[t._v("变量不能为 null")])]),t._v(" "),n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("public struct Student{\n        public string name;\n        public int age;\n\n        public void SetName(string name){\n            this.name = name;\n        }\n    }\n\n    static void Main(string[] args) {\n        Student student = null; //出错\n    }\n}\n")])])]),n("h2",{attrs:{id:"实例构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例构造函数")]),t._v(" "),n("ol",[n("li",[t._v("语言隐式地为了每个结构提供无参数的构造函数，值成员为默认值。")]),t._v(" "),n("li",[t._v("预定义的无参构造函数对每个结构都存在，且不能删除或重定义")]),t._v(" "),n("li",[t._v("也可以不用 new 运算符创建结构的实例\n"),n("ul",[n("li",[t._v("在显式设置数据成员之后，才能使用它们的值")]),t._v(" "),n("li",[t._v("在对所有数据成员赋值之后，才能调用任何函数成员")])])])]),t._v(" "),n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\nstatic void Main(string[] args) {\n    SStudent student;\n    student.age = 1;\n    //显式设置数据成员之后，才可以使用它们的值\n    Console.WriteLine(student.age);//可以使用\n    Console.WriteLine(student.name);//出错\n    //在对所有数据成员赋值之后，才能调用任何函数成员\n    student.SetName("name");//出错\n    student.name = "gu";\n    student.SetName("name");//可以使用\n}\n\n')])])]),n("h2",{attrs:{id:"静态构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 静态构造函数")]),t._v(" "),n("ol",[n("li",[t._v("与类相似，结构的静态构造函数创建并初始化静态数据成员，而且不能引用实例成员。")]),t._v(" "),n("li",[t._v("调用静态构造函数（满足其一即可）：\n"),n("ul",[n("li",[t._v("调用显式声明的构造函数")]),t._v(" "),n("li",[t._v("引用结构的静态成员")])])])]),t._v(" "),n("h2",{attrs:{id:"字段不可以初始化语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字段不可以初始化语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 字段不可以初始化语句")]),t._v(" "),n("div",{staticClass:"language-C# extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('public struct Student{\n    public string name = "gu";//出错\n    public int age;\n\n    public void SetName(string name){\n        this.name = name;\n    }\n}\n')])])]),n("h2",{attrs:{id:"作为参数和返回值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作为参数和返回值","aria-hidden":"true"}},[t._v("#")]),t._v(" 作为参数和返回值")]),t._v(" "),n("ul",[n("li",[t._v("返回值：将创建它的副本并从函数成员返回")]),t._v(" "),n("li",[t._v("值参数：将创建实参结构的副本。该副本用于方法的执行中")]),t._v(" "),n("li",[t._v("ref 和 out 参数：传入的是该结构的引用，这样可以修改其数据成员")])])])},[],!1,null,null,null);a.default=s.exports}}]);